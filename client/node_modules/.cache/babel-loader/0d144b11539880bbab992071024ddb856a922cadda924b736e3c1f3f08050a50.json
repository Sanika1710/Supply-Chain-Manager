{"ast":null,"code":"var _jsxFileName = \"/Users/sanika/Desktop/Supply-Chain-Blockchain/client/src/Supply.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport Web3 from \"web3\";\nimport SupplyChainABI from \"./artifacts/SupplyChain.json\";\nimport './Supply.css'; // Import custom CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Supply() {\n  _s();\n  const history = useHistory();\n  useEffect(() => {\n    loadWeb3();\n    loadBlockchaindata();\n  }, []);\n  const [currentaccount, setCurrentaccount] = useState(\"\");\n  const [loader, setloader] = useState(true);\n  const [SupplyChain, setSupplyChain] = useState();\n  const [MED, setMED] = useState({});\n  const [MedStage, setMedStage] = useState([]);\n  const [ID, setID] = useState(\"\");\n  const loadWeb3 = async () => {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n    }\n  };\n  const loadBlockchaindata = async () => {\n    setloader(true);\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    const account = accounts[0];\n    setCurrentaccount(account);\n    const networkId = await web3.eth.net.getId();\n    const networkData = SupplyChainABI.networks[networkId];\n    if (networkData) {\n      const supplychain = new web3.eth.Contract(SupplyChainABI.abi, networkData.address);\n      setSupplyChain(supplychain);\n      const medCtr = await supplychain.methods.medicineCtr().call();\n      const med = {};\n      const medStage = [];\n      for (let i = 0; i < medCtr; i++) {\n        med[i] = await supplychain.methods.MedicineStock(i + 1).call();\n        medStage[i] = await supplychain.methods.showStage(i + 1).call();\n      }\n      setMED(med);\n      setMedStage(medStage);\n      setloader(false);\n    } else {\n      window.alert('The smart contract is not deployed to the current network');\n    }\n  };\n  const redirect_to_home = () => {\n    history.push('/');\n  };\n  const handlerChangeID = event => {\n    setID(event.target.value);\n  };\n  const handlerSubmitRMSsupply = async event => {\n    event.preventDefault();\n    try {\n      const receipt = await SupplyChain.methods.RMSsupply(ID).send({\n        from: currentaccount\n      });\n      if (receipt) {\n        loadBlockchaindata();\n      }\n    } catch (err) {\n      alert(\"An error occurred!!!\");\n    }\n  };\n  const handlerSubmitManufacturing = async event => {\n    event.preventDefault();\n    try {\n      const receipt = await SupplyChain.methods.Manufacturing(ID).send({\n        from: currentaccount\n      });\n      if (receipt) {\n        loadBlockchaindata();\n      }\n    } catch (err) {\n      alert(\"An error occurred!!!\");\n    }\n  };\n  const handlerSubmitDistribute = async event => {\n    event.preventDefault();\n    try {\n      const receipt = await SupplyChain.methods.Distribute(ID).send({\n        from: currentaccount\n      });\n      if (receipt) {\n        loadBlockchaindata();\n      }\n    } catch (err) {\n      alert(\"An error occurred!!!\");\n    }\n  };\n  const handlerSubmitRetail = async event => {\n    event.preventDefault();\n    try {\n      const receipt = await SupplyChain.methods.Retail(ID).send({\n        from: currentaccount\n      });\n      if (receipt) {\n        loadBlockchaindata();\n      }\n    } catch (err) {\n      alert(\"An error occurred!!!\");\n    }\n  };\n  const handlerSubmitSold = async event => {\n    event.preventDefault();\n    try {\n      const receipt = await SupplyChain.methods.sold(ID).send({\n        from: currentaccount\n      });\n      if (receipt) {\n        loadBlockchaindata();\n      }\n    } catch (err) {\n      alert(\"An error occurred!!!\");\n    }\n  };\n  if (loader) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader-container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"wait\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"supply-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Current Account Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 23\n        }, this), \" \", currentaccount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: redirect_to_home,\n        className: \"btn btn-outline-danger btn-sm home-button\",\n        children: \"HOME\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Supply Chain Flow:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Medicine Order -> Raw Material Supplier -> Manufacturer -> Distributor -> Retailer -> Consumer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-sm table-dark\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Medicine ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Current Processing Stage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.keys(MED).map(key => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: MED[key].id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: MED[key].name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: MED[key].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: MedStage[key]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"supply-step\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Step 1: Supply Raw Materials\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), \" (Only a registered Raw Material Supplier can perform this step):\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handlerSubmitRMSsupply,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control-sm\",\n          type: \"text\",\n          onChange: handlerChangeID,\n          placeholder: \"Enter Medicine ID\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success btn-sm\",\n          children: \"Supply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"supply-step\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Step 2: Manufacture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), \" (Only a registered Manufacturer can perform this step):\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handlerSubmitManufacturing,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control-sm\",\n          type: \"text\",\n          onChange: handlerChangeID,\n          placeholder: \"Enter Medicine ID\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success btn-sm\",\n          children: \"Manufacture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"supply-step\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Step 3: Distribute\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), \" (Only a registered Distributor can perform this step):\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handlerSubmitDistribute,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control-sm\",\n          type: \"text\",\n          onChange: handlerChangeID,\n          placeholder: \"Enter Medicine ID\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success btn-sm\",\n          children: \"Distribute\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"supply-step\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Step 4: Retail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), \" (Only a registered Retailer can perform this step):\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handlerSubmitRetail,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control-sm\",\n          type: \"text\",\n          onChange: handlerChangeID,\n          placeholder: \"Enter Medicine ID\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success btn-sm\",\n          children: \"Retail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"supply-step\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Step 5: Mark as Sold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), \" (Only a registered Retailer can perform this step):\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handlerSubmitSold,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control-sm\",\n          type: \"text\",\n          onChange: handlerChangeID,\n          placeholder: \"Enter Medicine ID\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success btn-sm\",\n          children: \"Sold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 9\n  }, this);\n}\n_s(Supply, \"8wepiCf5qo+qU0Jz7FcXd1SdqnY=\", false, function () {\n  return [useHistory];\n});\n_c = Supply;\nexport default Supply;\nvar _c;\n$RefreshReg$(_c, \"Supply\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","Web3","SupplyChainABI","Supply","history","loadWeb3","loadBlockchaindata","currentaccount","setCurrentaccount","loader","setloader","SupplyChain","setSupplyChain","MED","setMED","MedStage","setMedStage","ID","setID","window","ethereum","web3","enable","currentProvider","alert","accounts","eth","getAccounts","account","networkId","net","getId","networkData","networks","supplychain","Contract","abi","address","medCtr","methods","medicineCtr","call","med","medStage","i","MedicineStock","showStage","redirect_to_home","push","handlerChangeID","event","target","value","handlerSubmitRMSsupply","preventDefault","receipt","RMSsupply","send","from","err","handlerSubmitManufacturing","Manufacturing","handlerSubmitDistribute","Distribute","handlerSubmitRetail","Retail","handlerSubmitSold","sold","Object","keys","map","key","id","name","description"],"sources":["/Users/sanika/Desktop/Supply-Chain-Blockchain/client/src/Supply.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport Web3 from \"web3\";\nimport SupplyChainABI from \"./artifacts/SupplyChain.json\";\nimport './Supply.css'; // Import custom CSS file\n\nfunction Supply() {\n    const history = useHistory();\n    useEffect(() => {\n        loadWeb3();\n        loadBlockchaindata();\n    }, []);\n\n    const [currentaccount, setCurrentaccount] = useState(\"\");\n    const [loader, setloader] = useState(true);\n    const [SupplyChain, setSupplyChain] = useState();\n    const [MED, setMED] = useState({});\n    const [MedStage, setMedStage] = useState([]);\n    const [ID, setID] = useState(\"\");\n\n    const loadWeb3 = async () => {\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum);\n            await window.ethereum.enable();\n        } else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider);\n        } else {\n            window.alert(\n                \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n            );\n        }\n    };\n\n    const loadBlockchaindata = async () => {\n        setloader(true);\n        const web3 = window.web3;\n        const accounts = await web3.eth.getAccounts();\n        const account = accounts[0];\n        setCurrentaccount(account);\n        const networkId = await web3.eth.net.getId();\n        const networkData = SupplyChainABI.networks[networkId];\n        if (networkData) {\n            const supplychain = new web3.eth.Contract(SupplyChainABI.abi, networkData.address);\n            setSupplyChain(supplychain);\n            const medCtr = await supplychain.methods.medicineCtr().call();\n            const med = {};\n            const medStage = [];\n            for (let i = 0; i < medCtr; i++) {\n                med[i] = await supplychain.methods.MedicineStock(i + 1).call();\n                medStage[i] = await supplychain.methods.showStage(i + 1).call();\n            }\n            setMED(med);\n            setMedStage(medStage);\n            setloader(false);\n        } else {\n            window.alert('The smart contract is not deployed to the current network');\n        }\n    };\n\n    const redirect_to_home = () => {\n        history.push('/');\n    };\n\n    const handlerChangeID = (event) => {\n        setID(event.target.value);\n    };\n\n    const handlerSubmitRMSsupply = async (event) => {\n        event.preventDefault();\n        try {\n            const receipt = await SupplyChain.methods.RMSsupply(ID).send({ from: currentaccount });\n            if (receipt) {\n                loadBlockchaindata();\n            }\n        } catch (err) {\n            alert(\"An error occurred!!!\");\n        }\n    };\n\n    const handlerSubmitManufacturing = async (event) => {\n        event.preventDefault();\n        try {\n            const receipt = await SupplyChain.methods.Manufacturing(ID).send({ from: currentaccount });\n            if (receipt) {\n                loadBlockchaindata();\n            }\n        } catch (err) {\n            alert(\"An error occurred!!!\");\n        }\n    };\n\n    const handlerSubmitDistribute = async (event) => {\n        event.preventDefault();\n        try {\n            const receipt = await SupplyChain.methods.Distribute(ID).send({ from: currentaccount });\n            if (receipt) {\n                loadBlockchaindata();\n            }\n        } catch (err) {\n            alert(\"An error occurred!!!\");\n        }\n    };\n\n    const handlerSubmitRetail = async (event) => {\n        event.preventDefault();\n        try {\n            const receipt = await SupplyChain.methods.Retail(ID).send({ from: currentaccount });\n            if (receipt) {\n                loadBlockchaindata();\n            }\n        } catch (err) {\n            alert(\"An error occurred!!!\");\n        }\n    };\n\n    const handlerSubmitSold = async (event) => {\n        event.preventDefault();\n        try {\n            const receipt = await SupplyChain.methods.sold(ID).send({ from: currentaccount });\n            if (receipt) {\n                loadBlockchaindata();\n            }\n        } catch (err) {\n            alert(\"An error occurred!!!\");\n        }\n    };\n\n    if (loader) {\n        return (\n            <div className=\"loader-container\">\n                <h1 className=\"wait\">Loading...</h1>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"supply-container\">\n            <div className=\"header-container\">\n                <span><b>Current Account Address:</b> {currentaccount}</span>\n                <span onClick={redirect_to_home} className=\"btn btn-outline-danger btn-sm home-button\">HOME</span>\n            </div>\n            <h6><b>Supply Chain Flow:</b></h6>\n            <p>Medicine Order -&gt; Raw Material Supplier -&gt; Manufacturer -&gt; Distributor -&gt; Retailer -&gt; Consumer</p>\n            <table className=\"table table-sm table-dark\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">Medicine ID</th>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Description</th>\n                        <th scope=\"col\">Current Processing Stage</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {Object.keys(MED).map(key => (\n                        <tr key={key}>\n                            <td>{MED[key].id}</td>\n                            <td>{MED[key].name}</td>\n                            <td>{MED[key].description}</td>\n                            <td>{MedStage[key]}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n\n            <div className=\"supply-step\">\n                <h5><b>Step 1: Supply Raw Materials</b> (Only a registered Raw Material Supplier can perform this step):</h5>\n                <form onSubmit={handlerSubmitRMSsupply}>\n                    <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeID} placeholder=\"Enter Medicine ID\" required />\n                    <button className=\"btn btn-outline-success btn-sm\">Supply</button>\n                </form>\n            </div>\n            <hr />\n            <div className=\"supply-step\">\n                <h5><b>Step 2: Manufacture</b> (Only a registered Manufacturer can perform this step):</h5>\n                <form onSubmit={handlerSubmitManufacturing}>\n                    <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeID} placeholder=\"Enter Medicine ID\" required />\n                    <button className=\"btn btn-outline-success btn-sm\">Manufacture</button>\n                </form>\n            </div>\n            <hr />\n            <div className=\"supply-step\">\n                <h5><b>Step 3: Distribute</b> (Only a registered Distributor can perform this step):</h5>\n                <form onSubmit={handlerSubmitDistribute}>\n                    <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeID} placeholder=\"Enter Medicine ID\" required />\n                    <button className=\"btn btn-outline-success btn-sm\">Distribute</button>\n                </form>\n            </div>\n            <hr />\n            <div className=\"supply-step\">\n                <h5><b>Step 4: Retail</b> (Only a registered Retailer can perform this step):</h5>\n                <form onSubmit={handlerSubmitRetail}>\n                    <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeID} placeholder=\"Enter Medicine ID\" required />\n                    <button className=\"btn btn-outline-success btn-sm\">Retail</button>\n                </form>\n            </div>\n            <hr />\n            <div className=\"supply-step\">\n                <h5><b>Step 5: Mark as Sold</b> (Only a registered Retailer can perform this step):</h5>\n                <form onSubmit={handlerSubmitSold}>\n                    <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeID} placeholder=\"Enter Medicine ID\" required />\n                    <button className=\"btn btn-outline-success btn-sm\">Sold</button>\n                </form>\n            </div>\n            <hr />\n        </div>\n    );\n}\n\nexport default Supply;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}