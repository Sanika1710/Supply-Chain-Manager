{"ast":null,"code":"var _jsxFileName = \"/Users/sanika/Desktop/Supply-Chain-Blockchain/client/src/AssignRoles.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Web3 from \"web3\";\nimport SupplyChainABI from \"./artifacts/SupplyChain.json\";\nimport { useHistory } from \"react-router-dom\";\nimport './AssignRoles.css'; // Import custom CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AssignRoles() {\n  _s();\n  const history = useHistory();\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [supplyChain, setSupplyChain] = useState(null);\n  const [roles, setRoles] = useState({\n    rms: [],\n    man: [],\n    dis: [],\n    ret: []\n  });\n  const [newRole, setNewRole] = useState({\n    address: \"\",\n    name: \"\",\n    place: \"\",\n    type: \"rms\"\n  });\n  useEffect(() => {\n    loadWeb3();\n    loadBlockchainData();\n  }, []);\n  const loadWeb3 = async () => {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\"Non-Ethereum browser detected. Consider using MetaMask!\");\n    }\n  };\n  const loadBlockchainData = async () => {\n    setLoading(true);\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    setCurrentAccount(accounts[0]);\n    const networkId = await web3.eth.net.getId();\n    const networkData = SupplyChainABI.networks[networkId];\n    if (networkData) {\n      const contract = new web3.eth.Contract(SupplyChainABI.abi, networkData.address);\n      setSupplyChain(contract);\n      const rmsCount = await contract.methods.rmsCtr().call();\n      const manCount = await contract.methods.manCtr().call();\n      const disCount = await contract.methods.disCtr().call();\n      const retCount = await contract.methods.retCtr().call();\n      const rms = await Promise.all(Array(parseInt(rmsCount)).fill().map((_, i) => contract.methods.RMS(i + 1).call()));\n      const man = await Promise.all(Array(parseInt(manCount)).fill().map((_, i) => contract.methods.MAN(i + 1).call()));\n      const dis = await Promise.all(Array(parseInt(disCount)).fill().map((_, i) => contract.methods.DIS(i + 1).call()));\n      const ret = await Promise.all(Array(parseInt(retCount)).fill().map((_, i) => contract.methods.RET(i + 1).call()));\n      setRoles({\n        rms,\n        man,\n        dis,\n        ret\n      });\n      setLoading(false);\n    } else {\n      window.alert('The smart contract is not deployed to the current network');\n    }\n  };\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setNewRole(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleRoleSubmit = async event => {\n    event.preventDefault();\n    const {\n      address,\n      name,\n      place,\n      type\n    } = newRole;\n    try {\n      let receipt;\n      switch (type) {\n        case \"rms\":\n          receipt = await supplyChain.methods.addRMS(address, name, place).send({\n            from: currentAccount\n          });\n          break;\n        case \"man\":\n          receipt = await supplyChain.methods.addManufacturer(address, name, place).send({\n            from: currentAccount\n          });\n          break;\n        case \"dis\":\n          receipt = await supplyChain.methods.addDistributor(address, name, place).send({\n            from: currentAccount\n          });\n          break;\n        case \"ret\":\n          receipt = await supplyChain.methods.addRetailer(address, name, place).send({\n            from: currentAccount\n          });\n          break;\n        default:\n          alert(\"Invalid role type selected\");\n          return;\n      }\n      if (receipt) {\n        loadBlockchainData();\n      }\n    } catch (err) {\n      alert(\"An error occurred!\");\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"wait\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"assign-roles-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Current Account Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 23\n        }, this), \" \", currentAccount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => history.push('/'),\n        className: \"btn btn-outline-danger btn-sm home-button\",\n        children: \"HOME\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Assign Roles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRoleSubmit,\n      className: \"role-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control-sm\",\n          name: \"type\",\n          onChange: handleInputChange,\n          value: newRole.type,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"rms\",\n            children: \"Raw Material Supplier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"man\",\n            children: \"Manufacturer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"dis\",\n            children: \"Distributor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"ret\",\n            children: \"Retailer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control-sm\",\n          type: \"text\",\n          name: \"address\",\n          placeholder: \"Ethereum Address\",\n          onChange: handleInputChange,\n          value: newRole.address,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control-sm\",\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Name\",\n          onChange: handleInputChange,\n          value: newRole.name,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control-sm\",\n          type: \"text\",\n          name: \"place\",\n          placeholder: \"Based In\",\n          onChange: handleInputChange,\n          value: newRole.place,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-success btn-sm\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Registered Roles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), [\"rms\", \"man\", \"dis\", \"ret\"].map(roleType => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [roleType.toUpperCase(), \"s:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Place\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Ethereum Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: roles[roleType].map((role, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: role.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: role.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: role.place\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: role.addr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }, this)]\n    }, roleType, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n}\n_s(AssignRoles, \"IJg/mInL649+gb5nsXlRKz4jnqs=\", false, function () {\n  return [useHistory];\n});\n_c = AssignRoles;\nexport default AssignRoles;\nvar _c;\n$RefreshReg$(_c, \"AssignRoles\");","map":{"version":3,"names":["React","useState","useEffect","Web3","SupplyChainABI","useHistory","AssignRoles","history","currentAccount","setCurrentAccount","loading","setLoading","supplyChain","setSupplyChain","roles","setRoles","rms","man","dis","ret","newRole","setNewRole","address","name","place","type","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","accounts","eth","getAccounts","networkId","net","getId","networkData","networks","contract","Contract","abi","rmsCount","methods","rmsCtr","call","manCount","manCtr","disCount","disCtr","retCount","retCtr","Promise","all","Array","parseInt","fill","map","_","i","RMS","MAN","DIS","RET","handleInputChange","event","value","target","prevState","handleRoleSubmit","preventDefault","receipt","addRMS","send","from","addManufacturer","addDistributor","addRetailer","err","push","roleType","toUpperCase","role","index","id","addr"],"sources":["/Users/sanika/Desktop/Supply-Chain-Blockchain/client/src/AssignRoles.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Web3 from \"web3\";\nimport SupplyChainABI from \"./artifacts/SupplyChain.json\";\nimport { useHistory } from \"react-router-dom\";\nimport './AssignRoles.css'; // Import custom CSS file\n\nfunction AssignRoles() {\n    const history = useHistory();\n\n    const [currentAccount, setCurrentAccount] = useState(\"\");\n    const [loading, setLoading] = useState(true);\n    const [supplyChain, setSupplyChain] = useState(null);\n    const [roles, setRoles] = useState({\n        rms: [],\n        man: [],\n        dis: [],\n        ret: [],\n    });\n\n    const [newRole, setNewRole] = useState({\n        address: \"\",\n        name: \"\",\n        place: \"\",\n        type: \"rms\",\n    });\n\n    useEffect(() => {\n        loadWeb3();\n        loadBlockchainData();\n    }, []);\n\n    const loadWeb3 = async () => {\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum);\n            await window.ethereum.enable();\n        } else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider);\n        } else {\n            window.alert(\"Non-Ethereum browser detected. Consider using MetaMask!\");\n        }\n    };\n\n    const loadBlockchainData = async () => {\n        setLoading(true);\n        const web3 = window.web3;\n        const accounts = await web3.eth.getAccounts();\n        setCurrentAccount(accounts[0]);\n        const networkId = await web3.eth.net.getId();\n        const networkData = SupplyChainABI.networks[networkId];\n\n        if (networkData) {\n            const contract = new web3.eth.Contract(SupplyChainABI.abi, networkData.address);\n            setSupplyChain(contract);\n\n            const rmsCount = await contract.methods.rmsCtr().call();\n            const manCount = await contract.methods.manCtr().call();\n            const disCount = await contract.methods.disCtr().call();\n            const retCount = await contract.methods.retCtr().call();\n\n            const rms = await Promise.all(Array(parseInt(rmsCount)).fill().map((_, i) => contract.methods.RMS(i + 1).call()));\n            const man = await Promise.all(Array(parseInt(manCount)).fill().map((_, i) => contract.methods.MAN(i + 1).call()));\n            const dis = await Promise.all(Array(parseInt(disCount)).fill().map((_, i) => contract.methods.DIS(i + 1).call()));\n            const ret = await Promise.all(Array(parseInt(retCount)).fill().map((_, i) => contract.methods.RET(i + 1).call()));\n\n            setRoles({ rms, man, dis, ret });\n            setLoading(false);\n        } else {\n            window.alert('The smart contract is not deployed to the current network');\n        }\n    };\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        setNewRole((prevState) => ({\n            ...prevState,\n            [name]: value,\n        }));\n    };\n\n    const handleRoleSubmit = async (event) => {\n        event.preventDefault();\n        const { address, name, place, type } = newRole;\n        try {\n            let receipt;\n            switch (type) {\n                case \"rms\":\n                    receipt = await supplyChain.methods.addRMS(address, name, place).send({ from: currentAccount });\n                    break;\n                case \"man\":\n                    receipt = await supplyChain.methods.addManufacturer(address, name, place).send({ from: currentAccount });\n                    break;\n                case \"dis\":\n                    receipt = await supplyChain.methods.addDistributor(address, name, place).send({ from: currentAccount });\n                    break;\n                case \"ret\":\n                    receipt = await supplyChain.methods.addRetailer(address, name, place).send({ from: currentAccount });\n                    break;\n                default:\n                    alert(\"Invalid role type selected\");\n                    return;\n            }\n            if (receipt) {\n                loadBlockchainData();\n            }\n        } catch (err) {\n            alert(\"An error occurred!\");\n        }\n    };\n\n    if (loading) {\n        return <h1 className=\"wait\">Loading...</h1>;\n    }\n\n    return (\n        <div className=\"assign-roles-container\">\n            <div className=\"header-container\">\n                <span><b>Current Account Address:</b> {currentAccount}</span>\n                <span onClick={() => history.push('/')} className=\"btn btn-outline-danger btn-sm home-button\">HOME</span>\n            </div>\n            <h4>Assign Roles</h4>\n            <form onSubmit={handleRoleSubmit} className=\"role-form\">\n                <div className=\"form-group\">\n                    <select\n                        className=\"form-control-sm\"\n                        name=\"type\"\n                        onChange={handleInputChange}\n                        value={newRole.type}\n                        required\n                    >\n                        <option value=\"rms\">Raw Material Supplier</option>\n                        <option value=\"man\">Manufacturer</option>\n                        <option value=\"dis\">Distributor</option>\n                        <option value=\"ret\">Retailer</option>\n                    </select>\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        className=\"form-control-sm\"\n                        type=\"text\"\n                        name=\"address\"\n                        placeholder=\"Ethereum Address\"\n                        onChange={handleInputChange}\n                        value={newRole.address}\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        className=\"form-control-sm\"\n                        type=\"text\"\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        onChange={handleInputChange}\n                        value={newRole.name}\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        className=\"form-control-sm\"\n                        type=\"text\"\n                        name=\"place\"\n                        placeholder=\"Based In\"\n                        onChange={handleInputChange}\n                        value={newRole.place}\n                        required\n                    />\n                </div>\n                <button className=\"btn btn-outline-success btn-sm\">Register</button>\n            </form>\n\n            <h4>Registered Roles</h4>\n            {[\"rms\", \"man\", \"dis\", \"ret\"].map((roleType) => (\n                <div key={roleType}>\n                    <h5>{roleType.toUpperCase()}s:</h5>\n                    <table className=\"table table-sm\">\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>Name</th>\n                                <th>Place</th>\n                                <th>Ethereum Address</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {roles[roleType].map((role, index) => (\n                                <tr key={index}>\n                                    <td>{role.id}</td>\n                                    <td>{role.name}</td>\n                                    <td>{role.place}</td>\n                                    <td>{role.addr}</td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            ))}\n        </div>\n    );\n}\n\nexport default AssignRoles;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}